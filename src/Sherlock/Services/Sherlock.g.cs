// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Sherlock.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Sherlock.Services {

  /// <summary>Holder for reflection information generated from Sherlock.proto</summary>
  public static partial class SherlockReflection {

    #region Descriptor
    /// <summary>File descriptor for Sherlock.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SherlockReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5TaGVybG9jay5wcm90bxIIU2hlcmxvY2saD3RpbWVzdGFtcC5wcm90byKc",
            "AgoKVHJhY2tlZExvZxItCgl0aW1lc3RhbXAYASABKAsyGi5nb29nbGUucHJv",
            "dG9idWYuVGltZXN0YW1wEi4KCGxvZ190eXBlGAIgASgOMhwuU2hlcmxvY2su",
            "VHJhY2tlZExvZy5Mb2dUeXBlEhAKCHNlcXVlbmNlGAMgASgEEg4KBmxvZ2dl",
            "chgEIAEoCRIQCghhY3Rvcl9pZBgFIAEoCRIMCgR0ZXh0GAYgASgJEhYKDmV4",
            "Y2VwdGlvbl90eXBlGAcgASgJIlUKB0xvZ1R5cGUSCwoHVmVyYm9zZRAAEgkK",
            "BURlYnVnEAESDwoLSW5mb3JtYXRpb24QAhILCgdXYXJuaW5nEAMSCQoFRXJy",
            "b3IQBBIJCgVGYXRhbBAFIjIKCExvZ0JhdGNoEiYKCG1lc3NhZ2VzGAEgAygL",
            "MhQuU2hlcmxvY2suVHJhY2tlZExvZyITChFUcmFja0xvZ3NSZXNwb25zZSK7",
            "AgoOVHJhY2tlZE1lc3NhZ2USEAoIc2VxdWVuY2UYASABKAQSGQoRbWlsbGlz",
            "X2Zyb21fZXBvY2gYAiABKAMSDgoGc2VuZGVyGAMgASgJEg4KBnRhcmdldBgE",
            "IAEoCRI1CglkaXJlY3Rpb24YBSABKA4yIi5TaGVybG9jay5UcmFja2VkTWVz",
            "c2FnZS5EaXJlY3Rpb24SNgoHbWVzc2FnZRgGIAMoCzIlLlNoZXJsb2NrLlRy",
            "YWNrZWRNZXNzYWdlLk1lc3NhZ2VFbnRyeRIQCghhY3Rvcl9pZBgHIAEoCRou",
            "CgxNZXNzYWdlRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4",
            "ASIrCglEaXJlY3Rpb24SDQoJVW5kZWZpbmVkEAASBgoCSW4QARIHCgNPdXQQ",
            "AiI7Cg1NZXNzYWdlc0JhdGNoEioKCG1lc3NhZ2VzGAEgAygLMhguU2hlcmxv",
            "Y2suVHJhY2tlZE1lc3NhZ2UiFwoVVHJhY2tNZXNzYWdlc1Jlc3BvbnNlItYB",
            "CgxUcmFja2VkU3RhdGUSEAoIYWN0b3JfaWQYASABKAkSGQoRbWlsbGlzX2Zy",
            "b21fZXBvY2gYAiABKAMSQQoOaW50ZXJuYWxfc3RhdGUYAyADKAsyKS5TaGVy",
            "bG9jay5UcmFja2VkU3RhdGUuSW50ZXJuYWxTdGF0ZUVudHJ5Eg4KBmNoaWxk",
            "cxgEIAMoCRIQCgh3YXJuaW5ncxgFIAMoCRo0ChJJbnRlcm5hbFN0YXRlRW50",
            "cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ASIUChJUcmFja1N0",
            "YXRlUmVzcG9uc2UikgEKD1RyYWNrZWRTdGF0ZU1hcBI3CgdyZXBvcnRzGAEg",
            "AygLMiYuU2hlcmxvY2suVHJhY2tlZFN0YXRlTWFwLlJlcG9ydHNFbnRyeRpG",
            "CgxSZXBvcnRzRW50cnkSCwoDa2V5GAEgASgJEiUKBXZhbHVlGAIgASgLMhYu",
            "U2hlcmxvY2suVHJhY2tlZFN0YXRlOgI4ASIOCgxDbGVhclJlcXVlc3QiDwoN",
            "Q2xlYXJSZXNwb25zZTKeAgoPU2hlcmxvY2tTZXJ2aWNlEjgKBUNsZWFyEhYu",
            "U2hlcmxvY2suQ2xlYXJSZXF1ZXN0GhcuU2hlcmxvY2suQ2xlYXJSZXNwb25z",
            "ZRI+CglUcmFja0xvZ3MSEi5TaGVybG9jay5Mb2dCYXRjaBobLlNoZXJsb2Nr",
            "LlRyYWNrTG9nc1Jlc3BvbnNlKAESSwoNVHJhY2tNZXNzYWdlcxIXLlNoZXJs",
            "b2NrLk1lc3NhZ2VzQmF0Y2gaHy5TaGVybG9jay5UcmFja01lc3NhZ2VzUmVz",
            "cG9uc2UoARJECgpUcmFja1N0YXRlEhYuU2hlcmxvY2suVHJhY2tlZFN0YXRl",
            "GhwuU2hlcmxvY2suVHJhY2tTdGF0ZVJlc3BvbnNlKAFCFKoCEVNoZXJsb2Nr",
            "LlNlcnZpY2VzYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Sherlock.Services.TrackedLog), global::Sherlock.Services.TrackedLog.Parser, new[]{ "Timestamp", "LogType", "Sequence", "Logger", "ActorId", "Text", "ExceptionType" }, null, new[]{ typeof(global::Sherlock.Services.TrackedLog.Types.LogType) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sherlock.Services.LogBatch), global::Sherlock.Services.LogBatch.Parser, new[]{ "Messages" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sherlock.Services.TrackLogsResponse), global::Sherlock.Services.TrackLogsResponse.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sherlock.Services.TrackedMessage), global::Sherlock.Services.TrackedMessage.Parser, new[]{ "Sequence", "MillisFromEpoch", "Sender", "Target", "Direction", "Message", "ActorId" }, null, new[]{ typeof(global::Sherlock.Services.TrackedMessage.Types.Direction) }, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sherlock.Services.MessagesBatch), global::Sherlock.Services.MessagesBatch.Parser, new[]{ "Messages" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sherlock.Services.TrackMessagesResponse), global::Sherlock.Services.TrackMessagesResponse.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sherlock.Services.TrackedState), global::Sherlock.Services.TrackedState.Parser, new[]{ "ActorId", "MillisFromEpoch", "InternalState", "Childs", "Warnings" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sherlock.Services.TrackStateResponse), global::Sherlock.Services.TrackStateResponse.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sherlock.Services.TrackedStateMap), global::Sherlock.Services.TrackedStateMap.Parser, new[]{ "Reports" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sherlock.Services.ClearRequest), global::Sherlock.Services.ClearRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sherlock.Services.ClearResponse), global::Sherlock.Services.ClearResponse.Parser, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///
  /// Log tracking
  /// </summary>
  public sealed partial class TrackedLog : pb::IMessage<TrackedLog> {
    private static readonly pb::MessageParser<TrackedLog> _parser = new pb::MessageParser<TrackedLog>(() => new TrackedLog());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TrackedLog> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sherlock.Services.SherlockReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrackedLog() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrackedLog(TrackedLog other) : this() {
      Timestamp = other.timestamp_ != null ? other.Timestamp.Clone() : null;
      logType_ = other.logType_;
      sequence_ = other.sequence_;
      logger_ = other.logger_;
      actorId_ = other.actorId_;
      text_ = other.text_;
      exceptionType_ = other.exceptionType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrackedLog Clone() {
      return new TrackedLog(this);
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Timestamp timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "log_type" field.</summary>
    public const int LogTypeFieldNumber = 2;
    private global::Sherlock.Services.TrackedLog.Types.LogType logType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Sherlock.Services.TrackedLog.Types.LogType LogType {
      get { return logType_; }
      set {
        logType_ = value;
      }
    }

    /// <summary>Field number for the "sequence" field.</summary>
    public const int SequenceFieldNumber = 3;
    private ulong sequence_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Sequence {
      get { return sequence_; }
      set {
        sequence_ = value;
      }
    }

    /// <summary>Field number for the "logger" field.</summary>
    public const int LoggerFieldNumber = 4;
    private string logger_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Logger {
      get { return logger_; }
      set {
        logger_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "actor_id" field.</summary>
    public const int ActorIdFieldNumber = 5;
    private string actorId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ActorId {
      get { return actorId_; }
      set {
        actorId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "text" field.</summary>
    public const int TextFieldNumber = 6;
    private string text_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Text {
      get { return text_; }
      set {
        text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "exception_type" field.</summary>
    public const int ExceptionTypeFieldNumber = 7;
    private string exceptionType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ExceptionType {
      get { return exceptionType_; }
      set {
        exceptionType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TrackedLog);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TrackedLog other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Timestamp, other.Timestamp)) return false;
      if (LogType != other.LogType) return false;
      if (Sequence != other.Sequence) return false;
      if (Logger != other.Logger) return false;
      if (ActorId != other.ActorId) return false;
      if (Text != other.Text) return false;
      if (ExceptionType != other.ExceptionType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (timestamp_ != null) hash ^= Timestamp.GetHashCode();
      if (LogType != 0) hash ^= LogType.GetHashCode();
      if (Sequence != 0UL) hash ^= Sequence.GetHashCode();
      if (Logger.Length != 0) hash ^= Logger.GetHashCode();
      if (ActorId.Length != 0) hash ^= ActorId.GetHashCode();
      if (Text.Length != 0) hash ^= Text.GetHashCode();
      if (ExceptionType.Length != 0) hash ^= ExceptionType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (timestamp_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Timestamp);
      }
      if (LogType != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) LogType);
      }
      if (Sequence != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(Sequence);
      }
      if (Logger.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Logger);
      }
      if (ActorId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ActorId);
      }
      if (Text.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Text);
      }
      if (ExceptionType.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ExceptionType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (timestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Timestamp);
      }
      if (LogType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) LogType);
      }
      if (Sequence != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Sequence);
      }
      if (Logger.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Logger);
      }
      if (ActorId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ActorId);
      }
      if (Text.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
      }
      if (ExceptionType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExceptionType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TrackedLog other) {
      if (other == null) {
        return;
      }
      if (other.timestamp_ != null) {
        if (timestamp_ == null) {
          timestamp_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Timestamp.MergeFrom(other.Timestamp);
      }
      if (other.LogType != 0) {
        LogType = other.LogType;
      }
      if (other.Sequence != 0UL) {
        Sequence = other.Sequence;
      }
      if (other.Logger.Length != 0) {
        Logger = other.Logger;
      }
      if (other.ActorId.Length != 0) {
        ActorId = other.ActorId;
      }
      if (other.Text.Length != 0) {
        Text = other.Text;
      }
      if (other.ExceptionType.Length != 0) {
        ExceptionType = other.ExceptionType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (timestamp_ == null) {
              timestamp_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(timestamp_);
            break;
          }
          case 16: {
            logType_ = (global::Sherlock.Services.TrackedLog.Types.LogType) input.ReadEnum();
            break;
          }
          case 24: {
            Sequence = input.ReadUInt64();
            break;
          }
          case 34: {
            Logger = input.ReadString();
            break;
          }
          case 42: {
            ActorId = input.ReadString();
            break;
          }
          case 50: {
            Text = input.ReadString();
            break;
          }
          case 58: {
            ExceptionType = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the TrackedLog message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum LogType {
        [pbr::OriginalName("Verbose")] Verbose = 0,
        [pbr::OriginalName("Debug")] Debug = 1,
        [pbr::OriginalName("Information")] Information = 2,
        [pbr::OriginalName("Warning")] Warning = 3,
        [pbr::OriginalName("Error")] Error = 4,
        [pbr::OriginalName("Fatal")] Fatal = 5,
      }

    }
    #endregion

  }

  public sealed partial class LogBatch : pb::IMessage<LogBatch> {
    private static readonly pb::MessageParser<LogBatch> _parser = new pb::MessageParser<LogBatch>(() => new LogBatch());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LogBatch> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sherlock.Services.SherlockReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogBatch() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogBatch(LogBatch other) : this() {
      messages_ = other.messages_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogBatch Clone() {
      return new LogBatch(this);
    }

    /// <summary>Field number for the "messages" field.</summary>
    public const int MessagesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Sherlock.Services.TrackedLog> _repeated_messages_codec
        = pb::FieldCodec.ForMessage(10, global::Sherlock.Services.TrackedLog.Parser);
    private readonly pbc::RepeatedField<global::Sherlock.Services.TrackedLog> messages_ = new pbc::RepeatedField<global::Sherlock.Services.TrackedLog>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Sherlock.Services.TrackedLog> Messages {
      get { return messages_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LogBatch);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LogBatch other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!messages_.Equals(other.messages_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= messages_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      messages_.WriteTo(output, _repeated_messages_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += messages_.CalculateSize(_repeated_messages_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LogBatch other) {
      if (other == null) {
        return;
      }
      messages_.Add(other.messages_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            messages_.AddEntriesFrom(input, _repeated_messages_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TrackLogsResponse : pb::IMessage<TrackLogsResponse> {
    private static readonly pb::MessageParser<TrackLogsResponse> _parser = new pb::MessageParser<TrackLogsResponse>(() => new TrackLogsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TrackLogsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sherlock.Services.SherlockReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrackLogsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrackLogsResponse(TrackLogsResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrackLogsResponse Clone() {
      return new TrackLogsResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TrackLogsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TrackLogsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TrackLogsResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  ///
  /// Messages tracking
  /// </summary>
  public sealed partial class TrackedMessage : pb::IMessage<TrackedMessage> {
    private static readonly pb::MessageParser<TrackedMessage> _parser = new pb::MessageParser<TrackedMessage>(() => new TrackedMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TrackedMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sherlock.Services.SherlockReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrackedMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrackedMessage(TrackedMessage other) : this() {
      sequence_ = other.sequence_;
      millisFromEpoch_ = other.millisFromEpoch_;
      sender_ = other.sender_;
      target_ = other.target_;
      direction_ = other.direction_;
      message_ = other.message_.Clone();
      actorId_ = other.actorId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrackedMessage Clone() {
      return new TrackedMessage(this);
    }

    /// <summary>Field number for the "sequence" field.</summary>
    public const int SequenceFieldNumber = 1;
    private ulong sequence_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Sequence {
      get { return sequence_; }
      set {
        sequence_ = value;
      }
    }

    /// <summary>Field number for the "millis_from_epoch" field.</summary>
    public const int MillisFromEpochFieldNumber = 2;
    private long millisFromEpoch_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MillisFromEpoch {
      get { return millisFromEpoch_; }
      set {
        millisFromEpoch_ = value;
      }
    }

    /// <summary>Field number for the "sender" field.</summary>
    public const int SenderFieldNumber = 3;
    private string sender_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Sender {
      get { return sender_; }
      set {
        sender_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "target" field.</summary>
    public const int TargetFieldNumber = 4;
    private string target_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Target {
      get { return target_; }
      set {
        target_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "direction" field.</summary>
    public const int DirectionFieldNumber = 5;
    private global::Sherlock.Services.TrackedMessage.Types.Direction direction_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Sherlock.Services.TrackedMessage.Types.Direction Direction {
      get { return direction_; }
      set {
        direction_ = value;
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 6;
    private static readonly pbc::MapField<string, string>.Codec _map_message_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 50);
    private readonly pbc::MapField<string, string> message_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Message {
      get { return message_; }
    }

    /// <summary>Field number for the "actor_id" field.</summary>
    public const int ActorIdFieldNumber = 7;
    private string actorId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ActorId {
      get { return actorId_; }
      set {
        actorId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TrackedMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TrackedMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Sequence != other.Sequence) return false;
      if (MillisFromEpoch != other.MillisFromEpoch) return false;
      if (Sender != other.Sender) return false;
      if (Target != other.Target) return false;
      if (Direction != other.Direction) return false;
      if (!Message.Equals(other.Message)) return false;
      if (ActorId != other.ActorId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Sequence != 0UL) hash ^= Sequence.GetHashCode();
      if (MillisFromEpoch != 0L) hash ^= MillisFromEpoch.GetHashCode();
      if (Sender.Length != 0) hash ^= Sender.GetHashCode();
      if (Target.Length != 0) hash ^= Target.GetHashCode();
      if (Direction != 0) hash ^= Direction.GetHashCode();
      hash ^= Message.GetHashCode();
      if (ActorId.Length != 0) hash ^= ActorId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Sequence != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Sequence);
      }
      if (MillisFromEpoch != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(MillisFromEpoch);
      }
      if (Sender.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Sender);
      }
      if (Target.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Target);
      }
      if (Direction != 0) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Direction);
      }
      message_.WriteTo(output, _map_message_codec);
      if (ActorId.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ActorId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Sequence != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Sequence);
      }
      if (MillisFromEpoch != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MillisFromEpoch);
      }
      if (Sender.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Sender);
      }
      if (Target.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Target);
      }
      if (Direction != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Direction);
      }
      size += message_.CalculateSize(_map_message_codec);
      if (ActorId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ActorId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TrackedMessage other) {
      if (other == null) {
        return;
      }
      if (other.Sequence != 0UL) {
        Sequence = other.Sequence;
      }
      if (other.MillisFromEpoch != 0L) {
        MillisFromEpoch = other.MillisFromEpoch;
      }
      if (other.Sender.Length != 0) {
        Sender = other.Sender;
      }
      if (other.Target.Length != 0) {
        Target = other.Target;
      }
      if (other.Direction != 0) {
        Direction = other.Direction;
      }
      message_.Add(other.message_);
      if (other.ActorId.Length != 0) {
        ActorId = other.ActorId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Sequence = input.ReadUInt64();
            break;
          }
          case 16: {
            MillisFromEpoch = input.ReadInt64();
            break;
          }
          case 26: {
            Sender = input.ReadString();
            break;
          }
          case 34: {
            Target = input.ReadString();
            break;
          }
          case 40: {
            direction_ = (global::Sherlock.Services.TrackedMessage.Types.Direction) input.ReadEnum();
            break;
          }
          case 50: {
            message_.AddEntriesFrom(input, _map_message_codec);
            break;
          }
          case 58: {
            ActorId = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the TrackedMessage message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Direction {
        [pbr::OriginalName("Undefined")] Undefined = 0,
        [pbr::OriginalName("In")] In = 1,
        [pbr::OriginalName("Out")] Out = 2,
      }

    }
    #endregion

  }

  public sealed partial class MessagesBatch : pb::IMessage<MessagesBatch> {
    private static readonly pb::MessageParser<MessagesBatch> _parser = new pb::MessageParser<MessagesBatch>(() => new MessagesBatch());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MessagesBatch> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sherlock.Services.SherlockReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessagesBatch() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessagesBatch(MessagesBatch other) : this() {
      messages_ = other.messages_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessagesBatch Clone() {
      return new MessagesBatch(this);
    }

    /// <summary>Field number for the "messages" field.</summary>
    public const int MessagesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Sherlock.Services.TrackedMessage> _repeated_messages_codec
        = pb::FieldCodec.ForMessage(10, global::Sherlock.Services.TrackedMessage.Parser);
    private readonly pbc::RepeatedField<global::Sherlock.Services.TrackedMessage> messages_ = new pbc::RepeatedField<global::Sherlock.Services.TrackedMessage>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Sherlock.Services.TrackedMessage> Messages {
      get { return messages_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MessagesBatch);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MessagesBatch other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!messages_.Equals(other.messages_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= messages_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      messages_.WriteTo(output, _repeated_messages_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += messages_.CalculateSize(_repeated_messages_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MessagesBatch other) {
      if (other == null) {
        return;
      }
      messages_.Add(other.messages_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            messages_.AddEntriesFrom(input, _repeated_messages_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TrackMessagesResponse : pb::IMessage<TrackMessagesResponse> {
    private static readonly pb::MessageParser<TrackMessagesResponse> _parser = new pb::MessageParser<TrackMessagesResponse>(() => new TrackMessagesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TrackMessagesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sherlock.Services.SherlockReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrackMessagesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrackMessagesResponse(TrackMessagesResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrackMessagesResponse Clone() {
      return new TrackMessagesResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TrackMessagesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TrackMessagesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TrackMessagesResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  ///
  /// Inspection
  /// </summary>
  public sealed partial class TrackedState : pb::IMessage<TrackedState> {
    private static readonly pb::MessageParser<TrackedState> _parser = new pb::MessageParser<TrackedState>(() => new TrackedState());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TrackedState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sherlock.Services.SherlockReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrackedState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrackedState(TrackedState other) : this() {
      actorId_ = other.actorId_;
      millisFromEpoch_ = other.millisFromEpoch_;
      internalState_ = other.internalState_.Clone();
      childs_ = other.childs_.Clone();
      warnings_ = other.warnings_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrackedState Clone() {
      return new TrackedState(this);
    }

    /// <summary>Field number for the "actor_id" field.</summary>
    public const int ActorIdFieldNumber = 1;
    private string actorId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ActorId {
      get { return actorId_; }
      set {
        actorId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "millis_from_epoch" field.</summary>
    public const int MillisFromEpochFieldNumber = 2;
    private long millisFromEpoch_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MillisFromEpoch {
      get { return millisFromEpoch_; }
      set {
        millisFromEpoch_ = value;
      }
    }

    /// <summary>Field number for the "internal_state" field.</summary>
    public const int InternalStateFieldNumber = 3;
    private static readonly pbc::MapField<string, string>.Codec _map_internalState_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 26);
    private readonly pbc::MapField<string, string> internalState_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> InternalState {
      get { return internalState_; }
    }

    /// <summary>Field number for the "childs" field.</summary>
    public const int ChildsFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_childs_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> childs_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Childs {
      get { return childs_; }
    }

    /// <summary>Field number for the "warnings" field.</summary>
    public const int WarningsFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _repeated_warnings_codec
        = pb::FieldCodec.ForString(42);
    private readonly pbc::RepeatedField<string> warnings_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Warnings {
      get { return warnings_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TrackedState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TrackedState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ActorId != other.ActorId) return false;
      if (MillisFromEpoch != other.MillisFromEpoch) return false;
      if (!InternalState.Equals(other.InternalState)) return false;
      if(!childs_.Equals(other.childs_)) return false;
      if(!warnings_.Equals(other.warnings_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ActorId.Length != 0) hash ^= ActorId.GetHashCode();
      if (MillisFromEpoch != 0L) hash ^= MillisFromEpoch.GetHashCode();
      hash ^= InternalState.GetHashCode();
      hash ^= childs_.GetHashCode();
      hash ^= warnings_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ActorId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ActorId);
      }
      if (MillisFromEpoch != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(MillisFromEpoch);
      }
      internalState_.WriteTo(output, _map_internalState_codec);
      childs_.WriteTo(output, _repeated_childs_codec);
      warnings_.WriteTo(output, _repeated_warnings_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ActorId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ActorId);
      }
      if (MillisFromEpoch != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MillisFromEpoch);
      }
      size += internalState_.CalculateSize(_map_internalState_codec);
      size += childs_.CalculateSize(_repeated_childs_codec);
      size += warnings_.CalculateSize(_repeated_warnings_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TrackedState other) {
      if (other == null) {
        return;
      }
      if (other.ActorId.Length != 0) {
        ActorId = other.ActorId;
      }
      if (other.MillisFromEpoch != 0L) {
        MillisFromEpoch = other.MillisFromEpoch;
      }
      internalState_.Add(other.internalState_);
      childs_.Add(other.childs_);
      warnings_.Add(other.warnings_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ActorId = input.ReadString();
            break;
          }
          case 16: {
            MillisFromEpoch = input.ReadInt64();
            break;
          }
          case 26: {
            internalState_.AddEntriesFrom(input, _map_internalState_codec);
            break;
          }
          case 34: {
            childs_.AddEntriesFrom(input, _repeated_childs_codec);
            break;
          }
          case 42: {
            warnings_.AddEntriesFrom(input, _repeated_warnings_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TrackStateResponse : pb::IMessage<TrackStateResponse> {
    private static readonly pb::MessageParser<TrackStateResponse> _parser = new pb::MessageParser<TrackStateResponse>(() => new TrackStateResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TrackStateResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sherlock.Services.SherlockReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrackStateResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrackStateResponse(TrackStateResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrackStateResponse Clone() {
      return new TrackStateResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TrackStateResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TrackStateResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TrackStateResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class TrackedStateMap : pb::IMessage<TrackedStateMap> {
    private static readonly pb::MessageParser<TrackedStateMap> _parser = new pb::MessageParser<TrackedStateMap>(() => new TrackedStateMap());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TrackedStateMap> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sherlock.Services.SherlockReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrackedStateMap() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrackedStateMap(TrackedStateMap other) : this() {
      reports_ = other.reports_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrackedStateMap Clone() {
      return new TrackedStateMap(this);
    }

    /// <summary>Field number for the "reports" field.</summary>
    public const int ReportsFieldNumber = 1;
    private static readonly pbc::MapField<string, global::Sherlock.Services.TrackedState>.Codec _map_reports_codec
        = new pbc::MapField<string, global::Sherlock.Services.TrackedState>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForMessage(18, global::Sherlock.Services.TrackedState.Parser), 10);
    private readonly pbc::MapField<string, global::Sherlock.Services.TrackedState> reports_ = new pbc::MapField<string, global::Sherlock.Services.TrackedState>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::Sherlock.Services.TrackedState> Reports {
      get { return reports_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TrackedStateMap);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TrackedStateMap other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!Reports.Equals(other.Reports)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= Reports.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      reports_.WriteTo(output, _map_reports_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += reports_.CalculateSize(_map_reports_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TrackedStateMap other) {
      if (other == null) {
        return;
      }
      reports_.Add(other.reports_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            reports_.AddEntriesFrom(input, _map_reports_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ClearRequest : pb::IMessage<ClearRequest> {
    private static readonly pb::MessageParser<ClearRequest> _parser = new pb::MessageParser<ClearRequest>(() => new ClearRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClearRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sherlock.Services.SherlockReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClearRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClearRequest(ClearRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClearRequest Clone() {
      return new ClearRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClearRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClearRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClearRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class ClearResponse : pb::IMessage<ClearResponse> {
    private static readonly pb::MessageParser<ClearResponse> _parser = new pb::MessageParser<ClearResponse>(() => new ClearResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClearResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sherlock.Services.SherlockReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClearResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClearResponse(ClearResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClearResponse Clone() {
      return new ClearResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClearResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClearResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClearResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
