syntax="proto3";

import "timestamp.proto";

option csharp_namespace = "Sherlock.Services";
package Sherlock;

/*
 * Log tracking
 */
message TrackedLog {
    enum LogType {
        Verbose = 0;
        Debug = 1;
		Information = 2;
        Warning = 3;
        Error = 4;
        Fatal = 5;
    }
    
    google.protobuf.Timestamp timestamp = 1;
    LogType log_type = 2;
    uint64 sequence = 3;
    string logger = 4;
    string actor_id = 5;
    string text = 6;
    string exception_type = 7;
}

message LogBatch {
    repeated TrackedLog messages = 1;
}

message TrackLogsResponse {
}

/*
 * Messages tracking
 */
message TrackedMessage
{
	enum Direction{
		Undefined = 0;
		In = 1;
		Out = 2;
	}

	uint64 sequence = 1;
	int64  millis_from_epoch = 2;
	string sender = 3;
	string target = 4;
	Direction direction = 5;
	map<string, string> message = 6;
	string actor_id = 7;
}

message MessagesBatch {
	repeated TrackedMessage messages = 1;
}

message TrackMessagesResponse {
}

/*
 * Inspection
 */
message TrackedState
{
	string actor_id = 1;
	int64  millis_from_epoch = 2;
	map<string, string> internal_state = 3;
	repeated string childs = 4;
	repeated string warnings = 5;
}

message TrackStateResponse 
{
}

message TrackedStateMap
{
    map<string, TrackedState> reports = 1;
}

message ClearRequest {}
message ClearResponse {}

service SherlockService {
	rpc Clear(ClearRequest) returns (ClearResponse);
    rpc TrackLogs (stream LogBatch) returns (TrackLogsResponse);
    rpc TrackMessages (stream MessagesBatch) returns (TrackMessagesResponse);
    rpc TrackState (stream TrackedState) returns (TrackStateResponse);
}